module Equality where

-- equality is symmetric (definitionally so)

sym : (A:Type) -> (x:A) -> (y:A) -> (x = y) -> y = x
sym = \A x y pf . refl

-- and transitive

trans : (A:Type) -> (x:A) -> (y:A) -> (z:A) -> (x = z) -> (z = y) -> (x = y)
trans = \A x y z pf1 pf2 .
  subst pf1 by pf2 at h. x = h

-- propositional equality is reflected into definitional equality (ETT)
reflection : (A:Type) -> (B:Type) -> (A = B) -> A -> B
reflection = \A B p x. x

